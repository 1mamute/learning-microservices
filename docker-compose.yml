version: "3.9"
services:
  nodejs-catalog-service:
    env_file: ./nodejs-catalog-service/.env
    image: nodejs-catalog-service:latest
    restart: always
    build: ./nodejs-catalog-service
    container_name: nodejs-catalog-service
    ports:
      - 8000:8000

  python-checkout-service:
    env_file: ./python-checkout-service/.env
    image: python-checkout-service:latest
    restart: always
    build: ./python-checkout-service
    container_name: python-checkout-service
    ports:
      - 8001:5000

  python-products-service:
    env_file: ./python-products-service/.env
    image: python-products-service:latest
    restart: always
    build: ./python-products-service/
    container_name: python-products-service
    ports:
      - 8002:5000
    depends_on:
      - "mongo"
    networks:
      - mongo-network

  mongo:
    image: mongo:latest
    restart: always
    env_file: ./mongo-products-db/.env
    container_name: mongo
    volumes:
      - ./mongo-products-db/products.json:/docker-entrypoint-initdb.d/products.json:ro
      - ./mongo-products-db/initializing.sh:/docker-entrypoint-initdb.d/initializing.sh:ro
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - 8003:8081
    env_file: ./mongo-express/.env
    container_name: mongodb-express
    depends_on:
      - "mongo"
    networks:
      - mongo-network

networks:
  mongo-network:
